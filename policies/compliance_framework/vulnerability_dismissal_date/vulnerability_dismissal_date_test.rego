package compliance_framework.vulnerability_dismissal_date

NINETY_DAYS_NS := 7776000000000000

test_no_vulnerabilities_dimissed_ok if {
	count(violation) == 0 with input as {"alerts": [
		{
			"state": "open",
			"dismissed_at": null,
		},
		{
			"state": "open",
			"dismissed_at": null,
		},
		{
			"state": "open",
			"dismissed_at": null,
		},
	]}
}

test_vulnerability_dimissed_within_90_days_ok if {
	count(violation) == 0 with input as {"alerts": [
		{
			"state": "open",
			"dismissed_at": "2025-09-11T12:24:18Z",
		},
		{
			"state": "open",
			"dismissed_at": "2025-09-10T09:24:18Z",
		},
		{
			"state": "open",
			"dismissed_at": "2025-08-02T18:24:18Z",
		},
	]}
}

test_one_old_vulnerability_violation if {
	count(violation) == 1 with input as {"alerts": [{
		"state": "open",
		"dismissed_at": "2024-09-11T16:24:18Z",
	}]}
}

test_edge_case_vulnerability_ok if {
	ninety_days_ago_ns := (time.now_ns() - NINETY_DAYS_NS) + 1
	ninety_days_ago_string := time.format([ninety_days_ago_ns, "UTC"])
	count(violation) == 0 with input as {"alerts": [{
		"state": "open",
		"dismissed_at": ninety_days_ago_string,
	}]}
}

test_edge_case_vulnerability_violation if {
	ninety_days_ago_ns := (time.now_ns() - NINETY_DAYS_NS) - 1
	ninety_days_ago_string := time.format([ninety_days_ago_ns, "UTC"])
	count(violation) == 1 with input as {"alerts": [{
		"state": "open",
		"dismissed_at": ninety_days_ago_string,
	}]}
}

test_multiple_old_vulnerabilities_violation if {
	count(violation) == 1 with input as {"alerts": [
		{
			"state": "open",
			"dismissed_at": "2024-09-11T16:24:18Z",
		},
		{
			"state": "open",
			"dismissed_at": "2025-01-11T16:24:18Z",
		},
		{
			"state": "open",
			"dismissed_at": "2025-06-13T12:24:18Z",
		},
	]}
}
